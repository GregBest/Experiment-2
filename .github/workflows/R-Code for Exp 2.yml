## R Script, Experiment 2: Trait Suspicion as a Predictor of Compliance to a Confidence trick

## LOAD DATA + FUNCTIONS

## Load the data
    library(readxl)
    df <- read_excel("E2.xlsx")
    View(df)

## Install the required functions for the Logistic Regression, Cross-Validation and plotting
    install.packages('caret', dependencies = TRUE)
    install.packages('cowplot')

## Load the functions
    library("caret")
    library("ggplot2”)
    library(“cowplot”) 

## PREP THE DATASET

## Change the description of the outcome variable
    df$Engagement[df$Engagement==1] <- "Engaged"
    df$Engagement[df$Engagement==0] <- "Did not Engage"

## Convert the outcome variable to type factor and check it’s classification afterwards
    df$Engagement <- as.factor(df$Engagement)
    class(df$Engagement)

## PERFORM THE LOGISTIC REGRESSION

## Perform the logistic regression
    mylogit <- glm(Engagement ~ GCS, data = df, family = "binomial")

## View output of logistic regression 
    summary(mylogit)

## View odd ratios and 95% CI
    exp(cbind(OR = coef(mylogit), confint(mylogit)))

## Calculate the ‘McFadden’s’ Pseudo R-squared
    ll.null <- mylogit$null.deviance/-2
    ll.proposed <- mylogit$deviance/-2
    (ll.null - ll.proposed) / ll.null

## …and the p-value
    1 - pchisq(2*(ll.proposed - ll.null), df=1)
    1 - pchisq((mylogit$null.deviance - mylogit$deviance), df=1)

## CROSS VALIDATION

## Set a random seed
    set.seed(1995)

## Create the index matrix
    trainindex <- createDataPartition(df$Engagement, p=.8, list=FALSE, times=1)

## Create the train_df and test_df to be used for Cross Validation
    train_df <- df[trainindex,]
    test_df <- df[-trainindex,]

## Specify the type of training method used (Cross Validation) & number of folds (K=10) 
    ctrlspecs <- trainControl(method="cv", number=10,
                          savePredictions="all",
                          classProbs=FALSE)
                          
## Set a random seed
    set.seed(1995)

## Specify the model being used (which will be a Logistic Regression)
    model1 <- train(Engagement ~ GCS, 
                data=train_df,
                method="glm", family=binomial,
                trControl=ctrlspecs)
    print(model1)

## View output in terms of regression co-efficients 
    summary(model1)

 
## PLOTTING THE PREDICTIONS OF THE LOGISTIC REGRESSION

## Plotting what the Logistic Regression predicts, based on trait-suspicion scores
    predicted.data <- data.frame(
        probability.of.engagement=mylogit$fitted.values)
    predicted.data <- data.frame(
        probability.of.engagement=mylogit$fitted.values,
        GCS=df$GCS)
    ggplot(data=predicted.data, aes(x=GCS, y=probability.of.engagement)) +
        geom_point(aes(color=GCS), size=5) +
        xlab("GCS") +
        ylab("Predicted probability of engaging with the confidence trick")
